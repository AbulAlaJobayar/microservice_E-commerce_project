
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum role {
  ADMIN
  USER
}

enum accountStatus {
  PENDING
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum loginAttempt {
  SUCCESS
  FAILED
}

model User {
  id                String             @id @default(cuid())
  name              String
  email             String             @unique
  password          String
  role              role               @default(USER)
  verified          Boolean            @default(false)
  status            accountStatus      @default(PENDING)
  createdAT         DateTime           @default(now())
  updatedAT         DateTime           @updatedAt
  loginHistories    loginHistory[]
  verificationCodes verificationCode[]
}

model loginHistory {
  id        String       @id @default(cuid())
  userId    String
  User      User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  ipAddress String?
  userAgent String?
  attempt   loginAttempt @default(SUCCESS)
  loginAt   DateTime     @default(now())
}

enum verificationCodeType {
  ACCOUNT_ACTIVATION
  PASSWORD_RESET
  EMAIL_CHANGE
  PHONE_CHANGE
  TWO_FACTOR_AUTH
  TWO_FACTOR_AUTH_DISABLE
}

model verificationCode {
  id     String @id @default(cuid())
  userId String
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  code   String
  status verificationCodeType @default(ACCOUNT_ACTIVATION)
  issueAt DateTime @default(now())
  expireAt DateTime
  verifiedAt DateTime?
}
